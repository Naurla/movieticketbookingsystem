/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.movieticketbookingsystem;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Noltan
 */
public class DeleteShowTimePanel extends javax.swing.JPanel {

    /**
     * Creates new form DeleteShowTimePanel
     */
     private Database database;
    private ArrayList<Movie> movies;
    private ArrayList<Show> shows;

    public DeleteShowTimePanel(Database db) {
        initComponents();
      this.database = db;
        loadMovies();
    }
    private void loadMovies() {
        movies = MoviesDatabase.getAllMovies(database);
        movieComboBox.removeAllItems();
        for (Movie m : movies) {
            movieComboBox.addItem(m.getID() + " - " + m.getName());
        }
    }
    
    private void loadShowTimes(int movieID){
        shows = MoviesDatabase.getAllMovieShows(database, movieID);
        showComboBox.removeAllItems();
        
        for(Show s : shows){
            showComboBox.addItem("Show ID: " + s.getID());
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        movieComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        showComboBox = new javax.swing.JComboBox<>();
        deleteButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        showDetailsTable = new javax.swing.JTable();
        statusLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(33, 37, 41));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 193, 7));
        jLabel1.setText("Delete ShowTime");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Select Movie ID:");

        movieComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Movie IDs" }));
        movieComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select Show to Delete:");

        showComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Show IDs" }));
        showComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showComboBoxActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 193, 7));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        deleteButton.setText("Delete ShowTime");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        showDetailsTable.setBackground(new java.awt.Color(255, 193, 7));
        showDetailsTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        showDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ShowID", "Date", "Time", "Capacity", "AvailableSeats", "Place"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(showDetailsTable);

        statusLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 193, 7));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(239, 239, 239))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(showComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(movieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(movieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(showComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
          int movieIndex = movieComboBox.getSelectedIndex();
    int showIndex = showComboBox.getSelectedIndex();

    if(movieIndex >= 0 && showIndex >= 0){
        Movie movie = movies.get(movieIndex);
        Show show = shows.get(showIndex);

        if(show.getAvailableSeats() < show.getCapacity()){
            statusLabel.setText("This show has bookings. Cannot delete.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this show ID: " + show.getID() + "?",
            "Confirm Deletion",
            JOptionPane.YES_NO_OPTION);

        if(confirm == JOptionPane.YES_OPTION){
            String delete = "DELETE FROM `movie " + movie.getID() + " - shows` WHERE ID = " + show.getID() + ";";
            try{
                database.getStatement().execute(delete);
                loadShowTimes(movie.getID());
                statusLabel.setText("Show deleted successfully.");
            }catch (SQLException e){
                e.printStackTrace();
                statusLabel.setText("Error deleting show.");
            }
        }
    } else {
        statusLabel.setText("Please select a movie and show.");
    }
        

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void movieComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieComboBoxActionPerformed
        int selectedIndex = movieComboBox.getSelectedIndex();
        if(selectedIndex >=0){
            int movieID = movies.get(selectedIndex).getID();
            loadShowTimes(movieID);
        }
    }//GEN-LAST:event_movieComboBoxActionPerformed

    private void showComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showComboBoxActionPerformed
      int showIndex = showComboBox.getSelectedIndex();

    if(showIndex >= 0){
        Show show = shows.get(showIndex);

       DefaultTableModel model = (DefaultTableModel) showDetailsTable.getModel();
model.setRowCount(0); // clear previous rows

model.addRow(new Object[]{
    show.getID(),
    show.getDate(),
    show.getTime(),
    show.getCapacity(),
    show.getAvailableSeats(),
    show.getPlace()
});
    }//GEN-LAST:event_showComboBoxActionPerformed
   }

       

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> movieComboBox;
    private javax.swing.JComboBox<String> showComboBox;
    private javax.swing.JTable showDetailsTable;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}

